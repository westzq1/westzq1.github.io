I"ú-<p>We can use EXTPROC to invoke an external programs, like C. <br />
There is an simple example about setting:<br /></p>
<p dir="ltr" style="margin-left: 20px; margin-right: 0px">How to Dynamically Execute a SQL Script from a Stored Procedure? (Doc ID 341586.1)	
</p>

<p>Be aware that the IPC listener and extproc_connection_data is not mandatory, without IPC listener, a local extproc process will be started to communicate with server process. 
The C code I am using can be found:</p>
<p dir="ltr" style="margin-left: 20px; margin-right: 0px">How To Run Extproc Agent Under A Less Privileged Account (Doc ID 1204853.1)	 
</p>

<pre class="prettyprint lang-sql linenums=1 ">
SQL&gt; create or replace directory libdir as '$ORACLE_HOME/lib';

Directory created.

SQL&gt; 
SQL&gt; CREATE or replace LIBRARY shell_lib is 'shell.so' in libdir;
  2  /

Library created.

SQL&gt; CREATE OR REPLACE PACKAGE BD_UTIL as
  2  FUNCTION shell_ejecucion(comando in char) return pls_integer;
  3  END;
  4  /


Package created.

SQL&gt; SQL&gt; CREATE OR REPLACE PACKAGE BODY BD_UTIL is
  2  FUNCTION shell_ejecucion(comando in char) return pls_integer
  3  as language C
  4  name "sh"
  5  library shell_lib
  6  parameters (comando string,return int);
  7  END bd_util;
  8  /

Package body created.

SQL&gt; declare                                 
  2  retorno binary_integer;
  3  begin
  4  retorno := bd_util.shell_ejecucion('/bin/date &gt; /tmp/test.txt');
  5  dbms_output.put_line(retorno);
  6  end;
  7  /
PL/SQL procedure successfully completed.

SQL&gt; host ls -l /tmp/test.txt
-rw-r--r--. 1 oracle oinstall 29 Feb 25 22:10 /tmp/test.txt

-- with IPC listener, and extproc_connection_data
-- we can see there is a EXTPROC being spawned by Listener, and LOCAL=NO
# ps -ef|grep extproc
oracle    2732     1  0 22:41 ?        00:00:00 /opt/oracle/product/12.1/dbhome_1/bin/extprocPLSExtProc (LOCAL=NO)
root      2741 26893  0 22:41 pts/2    00:00:00 grep --color=auto extproc

-- after remove entry in tnsnames.ora
-- a little delay, the process will be spawned after timeout, with LOCAL=YES
# ps -ef|grep extproc
oracle    2887     1  0 22:42 ?        00:00:00 /opt/oracle/product/12.1/dbhome_1/bin/extproc (DESCRIPTION=(LOCAL=YES)(ADDRESS=(PROTOCOL=BEQ)))
</pre>

<p>Usually, the EXTPROC will be folked in ‚Äúoracle‚Äù which is the owner of database and listener.
For security consideration, we normally want to extproc can be spawned in the less privilege users.<br />
So, for the situation above, there are two different way to configure this.</p>

<p>If the process is spawned by database, we can use credential.</p>
<pre class="prettyprint lang-sql linenums=1 ">
SQL&gt; begin
  2  dbms_credential.create_credential(
  3  credential_name =&gt; 'run_marc',
  4  username =&gt; 'marc',
  5  password =&gt; '123456'
  6  );
  7  end;
  8  /

PL/SQL procedure successfully completed.

SQL&gt; CREATE or replace LIBRARY shell_lib is 'shell.so' in libdir credential run_marc;
  2  /

Library created.

SQL&gt; declare
  2  retorno binary_integer;
  3  begin
  4  retorno := bd_util.shell_ejecucion('/bin/date &gt; /tmp/test.txt');
  5  dbms_output.put_line(retorno);
  6  end;
  7  /
0

PL/SQL procedure successfully completed.

SQL&gt; host ls -l /tmp/test.txt
-rw-rw-rw-. 1 marc users 29 Feb 25 22:52 /tmp/test.txt
</pre>

<p>We change the owner and permission of ‚Äú/tmp/test.txt‚Äù, let user marc cannot write it.</p>
<pre class="prettyprint lang-sql linenums=1 ">
# chown oracle.oinstall /tmp/test.txt
# chmod 644 /tmp/test.txt 

SQL&gt; set serveroutput on
SQL&gt; declare
  2  retorno binary_integer;
  3  begin
  4  retorno := bd_util.shell_ejecucion('/bin/date &gt; /tmp/test.txt');
  5  dbms_output.put_line(retorno);
  6  end;
  7  /
256         -- an error reported.

PL/SQL procedure successfully completed.
</pre>

<p>Unfortunately, credential is not working if the extproc is spawned by listener.<br />
I add extproc_connection_data in tnsnames.ora</p>
<pre class="prettyprint lang-sql linenums=1 ">
SQL&gt; host rm -rf /tmp/test.txt

SQL&gt; declare
  2  retorno binary_integer;
  3  begin
  4  retorno := bd_util.shell_ejecucion('/bin/date &gt; /tmp/test.txt');
  5  dbms_output.put_line(retorno);
  6  end;
  7  /
0

PL/SQL procedure successfully completed.

-- the file is still generated by oracle
SQL&gt; host ls -l /tmp/test.txt
-rw-r--r--. 1 oracle oinstall 29 Feb 25 23:13 /tmp/test.txt
</pre>

<p>How To Run Extproc Agent Under A Less Privileged Account (Doc ID 1204853.1)	<br />
gives a way but not working, even the process is spawned as marc</p>

<pre class="prettyprint lang-sql linenums=1 ">
[root@testenv bin]# ps -ef|grep extproc
marc      5936     1  0 23:24 ?        00:00:00 /opt/oracle/product/12.1/dbhome_1/bin/extprocPLSExtProc (LOCAL=NO)

-- rerun the test code.

-- the file is still generated by oracle, even the credential is to marc
SQL&gt; host ls -l /tmp/test.txt
-rw-r--r--. 1 oracle oinstall 29 Feb 25 23:25 /tmp/test.txt
</pre>

<p>Due to the extproc which spawned by listener will inherent the priliveges of listener. 
So, we need to move IPC listener to the diffenent user.</p>

<pre class="prettyprint lang-sql linenums=1 ">
$ whoami          
marc
$ . oraenv
ORACLE_SID = [o12102] ? o12102
The Oracle base remains unchanged with value /opt/oracle
$ export TNS_ADMIN=/home/marc/admin
$ lsnrctl start extproc_listener

LSNRCTL for Linux: Version 12.1.0.2.0 - Production on 25-FEB-2019 23:33:02

Copyright (c) 1991, 2014, Oracle.  All rights reserved.

Starting /opt/oracle/product/12.1/dbhome_1/bin/tnslsnr: please wait...

TNSLSNR for Linux: Version 12.1.0.2.0 - Production
System parameter file is /home/marc/admin/listener.ora
Log messages written to /opt/oracle/diag/tnslsnr/testenv/extproc_listener/alert/log.xml
Listening on: (DESCRIPTION=(ADDRESS=(PROTOCOL=ipc)(KEY=EXTPROC1)))

Connecting to (DESCRIPTION=(ADDRESS=(PROTOCOL=IPC)(KEY=EXTPROC1)))
STATUS of the LISTENER
------------------------
Alias                     extproc_listener
Version                   TNSLSNR for Linux: Version 12.1.0.2.0 - Production
Start Date                25-FEB-2019 23:33:02
Uptime                    0 days 0 hr. 0 min. 0 sec
Trace Level               off
Security                  ON: Local OS Authentication
SNMP                      OFF
Listener Parameter File   /home/marc/admin/listener.ora
Listener Log File         /opt/oracle/diag/tnslsnr/testenv/extproc_listener/alert/log.xml
Listening Endpoints Summary...
  (DESCRIPTION=(ADDRESS=(PROTOCOL=ipc)(KEY=EXTPROC1)))
Services Summary...
Service "PLSExtProc" has 1 instance(s).
  Instance "PLSExtProc", status UNKNOWN, has 1 handler(s) for this service...
The command completed successfully
$ ps -ef|grep tns
root        22     2  0 Feb24 ?        00:00:00 [netns]
oracle    2353     1  0 22:39 ?        00:00:00 /opt/oracle/product/12.1/dbhome_1/bin/tnslsnr LISTENER -inherit
marc      6582     1  0 23:33 ?        00:00:00 /opt/oracle/product/12.1/dbhome_1/bin/tnslsnr extproc_listener -inherit

-- change tnsnames.ora:
extproc_connection_data =
(DESCRIPTION =
  (ADDRESS_LIST = (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1)))
  (CONNECT_DATA = (SID = PLSExtProc) (PRESENTATION = RO))
)


SQL&gt; declare
  2  retorno binary_integer;
  3  begin
  4  retorno := bd_util.shell_ejecucion('/bin/date &gt; /tmp/test.txt');
  5  dbms_output.put_line(retorno);
  6  end;
  7  /

PL/SQL procedure successfully completed.

SQL&gt; host ls -l /tmp/test.txt
-rw-r--r--. 1 marc users 29 Feb 25 23:36 /tmp/test.txt
</pre>

<p>Be careful, from Oracle database version 12.2.0.1 and above, the ‚Äúextproc‚Äù agent no longer resolves the EXTPROC_CONNECTION_DATA entry in tnsnames.ora for security reaons and the agent gets spawned by the database itself. <br /></p>
<p dir="ltr" style="margin-left: 20px; margin-right: 0px">Configuring Listener To Spawn EXTPROC Agent Is Not Working in 12.2, EXTPROC_CONNECTION_DATA Is Not Getting Resolved. (Doc ID 2326592.1)	
</p>

<p>We have to use agent after 12.2 to use the listener to spawn an EXTPROC</p>

<pre class="prettyprint lang-sql linenums=1 ">
$ cat listener.ora 
LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC2))
      (ADDRESS = (PROTOCOL = TCP)(HOST = testenv)(PORT = 1521))
      (ADDRESS = (PROTOCOL = TCPS)(HOST = testenv)(PORT = 2484))
    )
  )

SID_LIST_LISTENER =
  (SID_LIST =
    (SID_DESC =
      (SID_NAME = PLSExtProc)
      (ORACLE_HOME=/opt/oracle/product/12.2/dbhome_1)
      (PROGRAM=/opt/oracle/product/12.2/dbhome_1/bin/extproc)
      (ENVS="EXTPROC_DLLS=ANY", "LD_LIBRARY_PATH=/home/oracle/lib")
    )
  )
  
$ cat tnsnames.ora 
extproc_connection_data =
(DESCRIPTION =
  (ADDRESS_LIST = (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC2)))
  (CONNECT_DATA = (SID = PLSExtProc) (PRESENTATION = RO))
)
</pre>

<p>This time, I put shell.so to /home/oracle/lib</p>

<pre class="prettyprint lang-sql linenums=1 ">
SQL&gt; create or replace directory libdir as '/home/oracle/lib';

Directory created.

SQL&gt; 
SQL&gt; CREATE or replace LIBRARY shell_lib is 'shell.so' in libdir;
  2  /

Library created.

SQL&gt; declare                                 
  2  retorno binary_integer;
  3  begin
  4  retorno := bd_util.shell_ejecucion('/bin/date &gt; /tmp/test.txt');
  5  dbms_output.put_line(retorno);
  6  end;
  7  /
declare
*
ERROR at line 1:
ORA-28595: Extproc agent : Invalid DLL Path
ORA-06512: at "SYS.BD_UTIL", line 2
ORA-06512: at line 4
</pre>

<p>Due to /home/oracle/lib is not on the LD_LIBRARY_PATH in .bash_profile, so, the EXTPROC spawned by database cannot find this one in 12.2</p>

<p>We can follow DOC 1109144.1 to set</p>
<p dir="ltr" style="margin-left: 20px; margin-right: 0px">How to Execute Both 32-bit and 64-bit External Procedures Within The Same 11.2 and Above Database (Doc ID 1109144.1)	
</p>

<p>Be aware that the tnsname cannot be extproc_connection_data</p>
<pre class="prettyprint lang-sql linenums=1 ">
SQL&gt; DATABASE LINK agent_link USING 'extproc_connection_data';

Database link created.

SQL&gt; CREATE or replace LIBRARY shell_lib is 'shell.so' in libdir AGENT 'agent_link';

Library created.

SQL&gt; declare
  2  retorno binary_integer;
  3  begin
  4  retorno := bd_util.shell_ejecucion('/bin/date &gt; /tmp/test.txt');
  5  dbms_output.put_line(retorno);
  6  end;
  7  /
declare
*
ERROR at line 1:
ORA-28595: Extproc agent : Invalid DLL Path
ORA-06512: at "SYS.BD_UTIL", line 2
ORA-06512: at line 4

-- rename the tnsname to extproc_connection_data2
SQL&gt; DROP DATABASE LINK agent_link;

Database link dropped.

SQL&gt; CREATE DATABASE LINK agent_link USING 'extproc_connection_data2';

Database link created.

SQL&gt; CREATE or replace LIBRARY shell_lib is 'shell.so' in libdir AGENT 'agent_link';

Library created.

SQL&gt; declare
  2  retorno binary_integer;
  3  begin
  4  retorno := bd_util.shell_ejecucion('/bin/date &gt; /tmp/test.txt');
  5  dbms_output.put_line(retorno);
  6  end;
  7  /
0

PL/SQL procedure successfully completed.

</pre>

<p>Looks like it is impossible to disable database to spawn an EXTPROC.
So, in order to control the behavior of EXTPROC</p>
<ol>
  <li>always use listener to spawn EXTPROC</li>
  <li>use credential to restrict the EXTPROC the database spawned in the less privileged user.</li>
  <li>do not store .so file in the LD_LIBRARY_PATH, using listener to locate .so</li>
  <li>use ENVS=‚ÄùEXTPROC_DLLS=ONLY:/home/oracle/lib/shell.so‚Äù in listener to restrict the .so the user can use.</li>
  <li>never give create library and grant the use of library to end user directly, use procedure to encapsulate it, and only give the execute privilege on this procedure to end user.</li>
</ol>
:ET